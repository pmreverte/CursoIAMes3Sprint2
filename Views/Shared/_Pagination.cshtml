@using Sprint2.Models
@model PaginationInfo

@if (Model.TotalPages > 1)
{
    <nav aria-label="Navegación de páginas">
        <ul class="pagination justify-content-center">
            <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage - 1 })" aria-label="Anterior">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                </li>
            }

            <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage + 1 })" aria-label="Siguiente">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
    <div class="text-center text-muted">
        Mostrando página @Model.CurrentPage de @Model.TotalPages (Total: @Model.TotalItems tareas)
    </div>
}
